{"version":3,"sources":["vendor/circle.js","vendor/scrollIntoView.js","scripts.js"],"names":["Circlebar","prefs","this","element","$","append","value","maxValue","counter","dialWidth","size","fontSize","fontColor","skin","triggerPercentage","type","timer","attribs","dataset","that","initialise","parseInt","circleStarttime","startTime","circleMaxvalue","circleCounter","circleDialwidth","circleSize","circleFontsize","circleFontcolor","circleSkin","circleTriggerpercentage","circleType","addClass","find","css","width","height","font-size","color","renderProgress","progress","angle","Math","floor","removeClass","textFilter","factor","internalCallback","percentage","date","text","setInterval","Date","setSeconds","html","toISOString","substr","clearInterval","setTimeout","setValue","val","jQuery","fn","selector","scrollPos","x","y","ticking","requestScrollAnimation","callback","window","addEventListener","e","scrollX","pageXOffset","scrollY","pageYOffset","requestAnimationFrame","t","isScrolledIntoView","el","isCompleteVisible","rect","getBoundingClientRect","elTop","top","elBottom","bottom","innerHeight","translateElement","transformElement","transform","style","webkitTransform","MozTransform","msTransform","OTransform","document","ready","click","preventDefault","tab","triggeredOnce","pos","querySelector","each"],"mappings":"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","file":"../scripts.min.js","sourcesContent":["// $(document).ready(function () {\n//     var prefs = {\n//         element: \".circlebar\"\n//     };\n//     $('.circlebar').each(function () {\n//         prefs.element = $(this);\n//         new Circlebar(prefs);\n//     });\n// });\n\nfunction Circlebar(prefs) {\n    this.element = $(prefs.element);\n    this.element.append('<div class=\"spinner-holder-one animate-0-25-a\"><div class=\"spinner-holder-two animate-0-25-b\"><div class=\"loader-spinner\" style=\"\"></div></div></div><div class=\"spinner-holder-one animate-25-50-a\"><div class=\"spinner-holder-two animate-25-50-b\"><div class=\"loader-spinner\"></div></div></div><div class=\"spinner-holder-one animate-50-75-a\"><div class=\"spinner-holder-two animate-50-75-b\"><div class=\"loader-spinner\"></div></div></div><div class=\"spinner-holder-one animate-75-100-a\"><div class=\"spinner-holder-two animate-75-100-b\"><div class=\"loader-spinner\"></div></div></div>');\n    this.value, this.maxValue, this.counter, this.dialWidth, this.size, this.fontSize, this.fontColor, this.skin, this.triggerPercentage, this.type, this.timer;\n    // var attribs = this.element.find(\"div\")[0].parentNode.dataset;\n    var attribs = this.element[0].dataset,\n        that = this;\n    this.initialise = function () {\n        that.value = parseInt(attribs.circleStarttime) || parseInt(prefs.startTime) || 0;\n        that.maxValue = parseInt(attribs.circleMaxvalue) || parseInt(prefs.maxValue) || 60;\n        that.counter = parseInt(attribs.circleCounter) || parseInt(prefs.counter) || 1000;\n        that.dialWidth = parseInt(attribs.circleDialwidth) || parseInt(prefs.dialWidth) || 5;\n        that.size = attribs.circleSize || prefs.size || \"150px\";\n        that.fontSize = attribs.circleFontsize || prefs.fontSize || \"20px\";\n        that.fontColor = attribs.circleFontcolor || prefs.fontColor || \"rgb(135, 206, 235)\";\n        that.skin = attribs.circleSkin || prefs.skin || \" \";\n        that.triggerPercentage = attribs.circleTriggerpercentage || prefs.triggerPercentage || false;\n        that.type = attribs.circleType || prefs.type || \"timer\";\n\n\n        that.element.addClass(that.skin).addClass('loader');\n        that.element.find(\".loader-bg\").css(\"border-width\", that.dialWidth + \"px\");\n        that.element.find(\".loader-spinner\").css(\"border-width\", that.dialWidth + \"px\");\n        that.element.css({\n            \"width\": that.size,\n            \"height\": that.size\n        });\n        that.element.find(\".loader-bg .text\")\n            .css({\n                \"font-size\": that.fontSize,\n                \"color\": that.fontColor\n            });\n    };\n    this.initialise();\n    this.renderProgress = function (progress) {\n        progress = Math.floor(progress);\n        var angle = 0;\n        if (progress < 25) {\n            angle = -90 + (progress / 100) * 360;\n            that.element.find(\".animate-0-25-b\").css(\"transform\", \"rotate(\" + angle + \"deg)\");\n            if (that.triggerPercentage) {\n                that.element.addClass('circle-loaded-0');\n            }\n\n        } else if (progress >= 25 && progress < 50) {\n            angle = -90 + ((progress - 25) / 100) * 360;\n            that.element.find(\".animate-0-25-b\").css(\"transform\", \"rotate(0deg)\");\n            that.element.find(\".animate-25-50-b\").css(\"transform\", \"rotate(\" + angle + \"deg)\");\n            if (that.triggerPercentage) {\n                that.element.removeClass('circle-loaded-0').addClass('circle-loaded-25');\n            }\n        } else if (progress >= 50 && progress < 75) {\n            angle = -90 + ((progress - 50) / 100) * 360;\n            that.element.find(\".animate-25-50-b, .animate-0-25-b\").css(\"transform\", \"rotate(0deg)\");\n            that.element.find(\".animate-50-75-b\").css(\"transform\", \"rotate(\" + angle + \"deg)\");\n            if (that.triggerPercentage) {\n                that.element.removeClass('circle-loaded-25').addClass('circle-loaded-50');\n            }\n        } else if (progress >= 75 && progress <= 100) {\n            angle = -90 + ((progress - 75) / 100) * 360;\n            that.element.find(\".animate-50-75-b, .animate-25-50-b, .animate-0-25-b\")\n                .css(\"transform\", \"rotate(0deg)\");\n            that.element.find(\".animate-75-100-b\").css(\"transform\", \"rotate(\" + angle + \"deg)\");\n            if (that.triggerPercentage) {\n                that.element.removeClass('circle-loaded-50').addClass('circle-loaded-75');\n            }\n        }\n    };\n    this.textFilter = function () {\n        var percentage = 0,\n            date = 0,\n            text = that.element.find(\".text\");\n        if (that.type == \"timer\") {\n            that.timer = setInterval(function () {\n                if (that.value < that.maxValue) {\n                    that.value += parseInt(that.counter / 1000);\n                    percentage = (that.value * 100) / that.maxValue;\n                    that.renderProgress(percentage);\n                    text[0].dataset.value = that.value;\n                    date = new Date(null);\n                    date.setSeconds(that.value); // specify value for seconds here\n                    text.html(date.toISOString().substr(11, 8));\n                } else {\n                    clearInterval(that.timer);\n                }\n            }, (that.counter));\n        }\n        if (that.type == \"progress\") {\n            function setDeceleratingTimeout(factor, times) {\n                var internalCallback = function (counter) {\n                    return function () {\n                        if (that.value < that.maxValue && that.value < 100) {\n                            that.value += 1;\n                            that.renderProgress(that.value);\n                            text[0].dataset.value = that.value;\n                            text.html(Math.floor(that.value) + \"%\");\n                            setTimeout(internalCallback, ++counter * factor);\n                        }\n                    }\n                }(times, 0);\n                setTimeout(internalCallback, factor);\n            };\n            setDeceleratingTimeout(0.1, 100);\n        }\n    }\n    this.textFilter();\n    this.setValue = function (val) {\n        text = that.element.find(\".text\");\n        that.value = val;\n        that.renderProgress(that.value);\n        text[0].dataset.value = that.value;\n        text.html(that.value);\n    }\n}\n\n(function ($) {\n    $.fn.Circlebar = function (prefs) {\n        prefs.element = this.selector;\n        new Circlebar(prefs);\n    };\n})(jQuery);","var scrollPos = {\r\n    x: 0,\r\n    y: 0\r\n};\r\nvar ticking = false;\r\n\r\nfunction requestScrollAnimation(callback) {\r\n    window.addEventListener('scroll', (e) => {\r\n\r\n        scrollPos = {\r\n            x: window.scrollX || window.pageXOffset,\r\n            y: window.scrollY || window.pageYOffset\r\n        };\r\n\r\n        if (!ticking) {\r\n\r\n            window.requestAnimationFrame((t) => {\r\n                callback(scrollPos);\r\n                ticking = false;\r\n            });\r\n\r\n            ticking = true;\r\n        }\r\n\r\n    });\r\n}\r\n\r\nfunction isScrolledIntoView(el, isCompleteVisible = false) {\r\n    var rect = el.getBoundingClientRect();\r\n    var elTop = rect.top;\r\n    var elBottom = rect.bottom;\r\n\r\n    var isVisible;\r\n\r\n    if (isCompleteVisible) {\r\n        isVisible = (elTop >= 0) && (elBottom <= window.innerHeight);\r\n    } else {\r\n        isVisible = (elTop < window.innerHeight) && (elBottom >= 0);\r\n    }\r\n\r\n    return isVisible;\r\n}\r\n\r\nfunction translateElement(el, x, y) {\r\n    var transform = `translate(${x}px, ${y}px)`;\r\n    transformElement(el, transform);\r\n}\r\n\r\nfunction transformElement(el, transform) {\r\n    el.style.webkitTransform = transform;\r\n    el.style.MozTransform = transform;\r\n    el.style.msTransform = transform;\r\n    el.style.OTransform = transform;\r\n    el.style.transform = transform;\r\n}","$(document).ready(() => {\r\n    $('#navId a').click(e => {\r\n        e.preventDefault();\r\n        $(this).tab('show');\r\n    });\r\n\r\n    //  Scroll Check Content\r\n\r\n    var triggeredOnce = true;\r\n    requestScrollAnimation((pos) => {\r\n        var elAlert = document.querySelector('.circlebar');\r\n        var isVisible = isScrolledIntoView(elAlert, true);\r\n        if (isVisible && triggeredOnce) {\r\n            triggeredOnce = false;\r\n\r\n            // Circle Radial Intitialization\r\n\r\n            var prefs = {\r\n                element: \".circlebar\",\r\n                fontSize: \"30px\",\r\n                // dialWidth: 40,\r\n                // triggerPercentage: true\r\n\r\n            };\r\n            $('.circlebar').each(function () {\r\n                prefs.element = $(this);\r\n                new Circlebar(prefs);\r\n            });\r\n        }\r\n    });\r\n});"]}